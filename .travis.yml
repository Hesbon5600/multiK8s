language: python

python:
  - "3.6"

addons:
  postgresql: "9.6"

services:
  - postgresql
  - docker
# before_install:
#   - docker build -t docker-basics -f Dockerfile .

install:
  - pip install pipenv
  - pip install coveralls
  - pipenv install

# Run tests
before_script:
  - psql -c "create database $POSTGRES_DB;" -U $POSTGRES_USER
  - psql -c "ALTER USER $POSTGRES_USER WITH PASSWORD '$POSTGRES_PASSWORD';" -U $POSTGRES_USER
  - python manage.py migrate
script:
  - coverage run --source=app manage.py test

  - python -m coverage report -m

after_success:
  - coveralls
  - docker-compose build
  - docker tag app-image $DOCKER_ID/docker-basics-app-image:1.0
  - docker tag nginx-custom $DOCKER_ID/docker-basics-nginx-custom:1.0
  # Login to docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Push the image to docker hub
  - docker push $DOCKER_ID/docker-basics-app-image:1.0
  - docker push $DOCKER_ID/docker-basics-nginx-custom:1.0

deploy:
  on:
    branch: master
  skip_cleanup: true
  provider: elasticbeanstalk
  region: "us-west-2"
  app: "multi-docker"
  env: "MultiDocker-env"
  bucket_name: "elasticbeanstalk-us-west-2-310263286605"
  bucket_path: "docker-multi"
  only_create_app_version: false
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY